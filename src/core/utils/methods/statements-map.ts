// Auto-generated by minimize-xano-structure.ts
export const statementsMap: Map<string, { display: string; group?: string }> = new Map([
  [
    "mvp:die",
    {
      "display": "Stop & Debug"
    }
  ],
  [
    "mvp:return",
    {
      "display": "Return"
    }
  ],
  [
    "mvp:setheader",
    {
      "display": "Set Header"
    }
  ],
  [
    "mvp:dbo_truncate",
    {
      "display": "Clear All Records"
    }
  ],
  [
    "mvp:dbo_direct_query",
    {
      "display": "Direct Database Query"
    }
  ],
  [
    "mvp:dbo_add",
    {
      "display": "Add Record"
    }
  ],
  [
    "mvp:conditional",
    {
      "display": "Conditional"
    }
  ],
  [
    "mvp:dbo_del",
    {
      "display": "Delete Record"
    }
  ],
  [
    "mvp:dbo_delby",
    {
      "display": "Delete Record"
    }
  ],
  [
    "mvp:dbo_edit",
    {
      "display": "Edit Record"
    }
  ],
  [
    "mvp:dbo_editby",
    {
      "display": "Edit Record"
    }
  ],
  [
    "mvp:dbo_patch",
    {
      "display": "Patch Record"
    }
  ],
  [
    "mvp:dbo_addoreditby",
    {
      "display": "Add or Edit Record"
    }
  ],
  [
    "mvp:dbo_relace",
    {
      "display": "Replace Record"
    }
  ],
  [
    "mvp:while",
    {
      "display": "While loop"
    }
  ],
  [
    "mvp:for",
    {
      "display": "For loop"
    }
  ],
  [
    "mvp:foreach",
    {
      "display": "For Each loop"
    }
  ],
  [
    "mvp:foreach_break",
    {
      "display": "Break out of loop"
    }
  ],
  [
    "mvp:foreach_continue",
    {
      "display": "Go to next iteration of loop"
    }
  ],
  [
    "mvp:foreach_remove",
    {
      "display": "Remove current entry from loop"
    }
  ],
  [
    "mvp:db_transaction",
    {
      "display": "Database Transaction"
    }
  ],
  [
    "mvp:function",
    {
      "display": "Function"
    }
  ],
  [
    "mvp:async_function",
    {
      "display": "Async Function"
    }
  ],
  [
    "mvp:async_function_await",
    {
      "display": "Async Function Await"
    }
  ],
  [
    "mvp:precondition",
    {
      "display": "Precondition"
    }
  ],
  [
    "mvp:dbo_get",
    {
      "display": "Get Record"
    }
  ],
  [
    "mvp:dbo_getby",
    {
      "display": "Get Record"
    }
  ],
  [
    "mvp:dbo_hasby",
    {
      "display": "Has Record"
    }
  ],
  [
    "mvp:health",
    {
      "display": "MVP Health"
    }
  ],
  [
    "mvp:dbo_view",
    {
      "display": "Query all Records"
    }
  ],
  [
    "mvp:array_merge",
    {
      "display": "Array: Merge"
    }
  ],
  [
    "mvp:array_push",
    {
      "display": "Array: Add To End"
    }
  ],
  [
    "mvp:array_pop",
    {
      "display": "Array: Remove from End"
    }
  ],
  [
    "mvp:array_shift",
    {
      "display": "Array: Remove from Beginning"
    }
  ],
  [
    "mvp:array_unshift",
    {
      "display": "Array: Add To Beginning"
    }
  ],
  [
    "mvp:array_filter",
    {
      "display": "Array: Find All Elements"
    }
  ],
  [
    "mvp:array_filter_count",
    {
      "display": "Array: Get Element Count"
    }
  ],
  [
    "mvp:array_find",
    {
      "display": "Array: Find First Element"
    }
  ],
  [
    "mvp:array_find_index",
    {
      "display": "Array: Find First Element Index"
    }
  ],
  [
    "mvp:array_has",
    {
      "display": "Array: Has Any Element"
    }
  ],
  [
    "mvp:array_every",
    {
      "display": "Array: Has Every Element"
    }
  ],
  [
    "mvp:object_keys",
    {
      "display": "Object: Get Keys"
    }
  ],
  [
    "mvp:object_values",
    {
      "display": "Object: Get Values"
    }
  ],
  [
    "mvp:object_entries",
    {
      "display": "Object: Get Entries"
    }
  ],
  [
    "mvp:check_pass",
    {
      "display": "Check Password"
    }
  ],
  [
    "mvp:api_request",
    {
      "display": "External API Request"
    }
  ],
  [
    "mvp:microservice_request",
    {
      "display": "Microservice Request"
    }
  ],
  [
    "mvp:lambda",
    {
      "display": "Lambda"
    }
  ],
  [
    "mvp:rand",
    {
      "display": "Generate Random Number"
    }
  ],
  [
    "mvp:random_bytes",
    {
      "display": "Generate Random Bytes"
    }
  ],
  [
    "mvp:guid",
    {
      "display": "Generate GUID"
    }
  ],
  [
    "mvp:uuid4",
    {
      "display": "Generate UUID"
    }
  ],
  [
    "mvp:sleep",
    {
      "display": "Sleep"
    }
  ],
  [
    "mvp:generate_pass",
    {
      "display": "Generate Password"
    }
  ],
  [
    "mvp:create_auth",
    {
      "display": "Create Authentication Token"
    }
  ],
  [
    "mvp:workspace_record_count",
    {
      "display": "Workspace Record Count"
    }
  ],
  [
    "mvp:workspace_stats",
    {
      "display": "WorkspaceStats"
    }
  ],
  [
    "mvp:workspace_bulk_schema_stats",
    {
      "display": "WorkspaceBulkSchemaStats"
    }
  ],
  [
    "mvp:set_workspace",
    {
      "display": "Set Workspace"
    }
  ],
  [
    "mvp:provide_addons",
    {
      "display": "Provide Addons"
    }
  ],
  [
    "mvp:provide_autocomplete",
    {
      "display": "Provide AutoComplete"
    }
  ],
  [
    "mvp:clone_branch",
    {
      "display": "CloneBranch"
    }
  ],
  [
    "mvp:delete_branch",
    {
      "display": "DeleteBranch"
    }
  ],
  [
    "mvp:set_branch_live",
    {
      "display": "SetBranchLive"
    }
  ],
  [
    "mvp:move_queries",
    {
      "display": "MoveQueries"
    }
  ],
  [
    "mvp:dbo_get_schema",
    {
      "display": "Get Database Schema"
    }
  ],
  [
    "mvp:enforce_data_source",
    {
      "display": "EnforceDataSource"
    }
  ],
  [
    "mvp:share_token_enforce_view",
    {
      "display": "Share Token: Enforce View"
    }
  ],
  [
    "mvp:share_token_enforce_table_ref",
    {
      "display": "Share Token: Enforce Table Ref"
    }
  ],
  [
    "mvp:share_token_redact_fields",
    {
      "display": "Share Token: Redact Fields"
    }
  ],
  [
    "mvp:crypto_create_octet_key",
    {
      "display": "Create Secret Key"
    }
  ],
  [
    "mvp:crypto_create_rsa_key",
    {
      "display": "Create RSA Key"
    }
  ],
  [
    "mvp:crypto_create_ec_key",
    {
      "display": "Create Eliptical Curve Key"
    }
  ],
  [
    "mvp:crypto_jws_encode",
    {
      "display": "JWS Encode"
    }
  ],
  [
    "mvp:crypto_jws_encode2",
    {
      "display": "JWS Encode"
    }
  ],
  [
    "mvp:crypto_jws_decode",
    {
      "display": "JWS Decode"
    }
  ],
  [
    "mvp:crypto_jws_decode2",
    {
      "display": "JWS Decode"
    }
  ],
  [
    "mvp:crypto_jwe_encode",
    {
      "display": "JWE Encode"
    }
  ],
  [
    "mvp:crypto_jwe_encode2",
    {
      "display": "JWE Encode"
    }
  ],
  [
    "mvp:crypto_jwe_encode3",
    {
      "display": "JWE Encode"
    }
  ],
  [
    "mvp:crypto_jwe_decode",
    {
      "display": "JWE Decode"
    }
  ],
  [
    "mvp:crypto_jwe_decode2",
    {
      "display": "JWE Decode"
    }
  ],
  [
    "mvp:crypto_encrypt",
    {
      "display": "Encrypt"
    }
  ],
  [
    "mvp:crypto_decrypt",
    {
      "display": "Decrypt"
    }
  ],
  [
    "mvp:set_var",
    {
      "display": "Create Variable"
    }
  ],
  [
    "mvp:update_var",
    {
      "display": "Update Variable"
    }
  ],
  [
    "mvp:math_add",
    {
      "display": "Add Number"
    }
  ],
  [
    "mvp:math_sub",
    {
      "display": "Subtract Number"
    }
  ],
  [
    "mvp:math_mul",
    {
      "display": "Multiply Number"
    }
  ],
  [
    "mvp:math_div",
    {
      "display": "Divide Number"
    }
  ],
  [
    "mvp:math_mod",
    {
      "display": "Modulus Number"
    }
  ],
  [
    "mvp:text_append",
    {
      "display": "Append Text"
    }
  ],
  [
    "mvp:text_prepend",
    {
      "display": "Prepend Text"
    }
  ],
  [
    "mvp:text_trim",
    {
      "display": "Text: Trim"
    }
  ],
  [
    "mvp:text_ltrim",
    {
      "display": "Text: Left Trim"
    }
  ],
  [
    "mvp:text_rtrim",
    {
      "display": "Text: Right Trim"
    }
  ],
  [
    "mvp:text_starts_with",
    {
      "display": "Text: Starts With"
    }
  ],
  [
    "mvp:text_istarts_with",
    {
      "display": "Text: Starts With (case-insensitive)"
    }
  ],
  [
    "mvp:text_ends_with",
    {
      "display": "Text: Ends With"
    }
  ],
  [
    "mvp:text_iends_with",
    {
      "display": "Text: Ends With (case insensitive)"
    }
  ],
  [
    "mvp:text_contains",
    {
      "display": "Text: Contains"
    }
  ],
  [
    "mvp:text_icontains",
    {
      "display": "Text: Contains (case insensitive)"
    }
  ],
  [
    "mvp:bitwise_and",
    {
      "display": "Bitwise AND"
    }
  ],
  [
    "mvp:bitwise_or",
    {
      "display": "Bitwise OR"
    }
  ],
  [
    "mvp:bitwise_xor",
    {
      "display": "Bitwise XOR"
    }
  ],
  [
    "mvp:create_image",
    {
      "display": "Create Image From File"
    }
  ],
  [
    "mvp:create_video",
    {
      "display": "Create Video From File"
    }
  ],
  [
    "mvp:create_audio",
    {
      "display": "Create Audio From File"
    }
  ],
  [
    "mvp:create_attachment",
    {
      "display": "Create Attachment From File"
    }
  ],
  [
    "mvp:create_file_resource",
    {
      "display": "Create File Resource"
    }
  ],
  [
    "mvp:create_var_from_file_resource",
    {
      "display": "Get File Resource Data"
    }
  ],
  [
    "mvp:delete_file",
    {
      "display": "Delete File"
    }
  ],
  [
    "mvp:calculate_geo_distance",
    {
      "display": "Calculate Distance"
    }
  ],
  [
    "mvp:ipaddress_lookup",
    {
      "display": "IP Address Lookup"
    }
  ],
  [
    "mvp:get_all_input",
    {
      "display": "Get All Input"
    }
  ],
  [
    "mvp:get_input",
    {
      "display": "Get All Raw Input"
    }
  ],
  [
    "mvp:get_env",
    {
      "display": "Get Environment Variables"
    }
  ],
  [
    "mvp:get_vars",
    {
      "display": "Get All Variables"
    }
  ],
  [
    "mvp:register_dbos",
    {
      "display": "RegisterDbos"
    }
  ],
  [
    "mvp:redis_set",
    {
      "display": "Set Cache Value"
    }
  ],
  [
    "mvp:redis_del",
    {
      "display": "Delete Cache Value"
    }
  ],
  [
    "mvp:redis_get",
    {
      "display": "Get Cache Value"
    }
  ],
  [
    "mvp:redis_has",
    {
      "display": "Has Cache Value"
    }
  ],
  [
    "mvp:redis_incr",
    {
      "display": "Increment Cache Value"
    }
  ],
  [
    "mvp:redis_decr",
    {
      "display": "Decrement Cache Value"
    }
  ],
  [
    "mvp:redis_keys",
    {
      "display": "Get Cache Keys"
    }
  ],
  [
    "mvp:redis_ratelimit",
    {
      "display": "Rate Limit"
    }
  ],
  [
    "mvp:redis_pushlist",
    {
      "display": "Add To End of List"
    }
  ],
  [
    "mvp:redis_poplist",
    {
      "display": "Remove From End of List"
    }
  ],
  [
    "mvp:redis_shiftlist",
    {
      "display": "Remove From Beginning of List"
    }
  ],
  [
    "mvp:redis_unshiftlist",
    {
      "display": "Add To Beginning of List"
    }
  ],
  [
    "mvp:redis_countlist",
    {
      "display": "Get Length of List"
    }
  ],
  [
    "mvp:redis_rangelist",
    {
      "display": "Get Elements From List"
    }
  ],
  [
    "mvp:redis_remove_list",
    {
      "display": "Remove From List"
    }
  ],
  [
    "mvp:start_process_job",
    {
      "display": "Start Process Job"
    }
  ],
  [
    "mvp:touch_workspace_cache",
    {
      "display": "mvp:touch_workspace_cache"
    }
  ],
  [
    "mvp:request_stats",
    {
      "display": "RequestStats"
    }
  ],
  [
    "mvp:function_history_stats",
    {
      "display": "FunctionHistoryStats"
    }
  ],
  [
    "mvp:create_datasource",
    {
      "display": "CreateDataSource"
    }
  ],
  [
    "mvp:delete_datasource",
    {
      "display": "DeleteDataSource"
    }
  ],
  [
    "mvp:update_datasource",
    {
      "display": "UpdateDataSource"
    }
  ],
  [
    "mvp:workspace_link",
    {
      "display": "WorkspaceLink"
    }
  ],
  [
    "mvp:merge_branch",
    {
      "display": "MergeBranch"
    }
  ],
  [
    "mvp:vault_path",
    {
      "display": "VaultPath"
    }
  ],
  [
    "mvp:vault_sign_url",
    {
      "display": "Private File: Sign URL"
    }
  ],
  [
    "mvp:delete_vault_ids",
    {
      "display": "DeleteVaultIds"
    }
  ],
  [
    "mvp:group",
    {
      "display": "Group"
    }
  ],
  [
    "mvp:post_process",
    {
      "display": "Schedule Post Process"
    }
  ],
  [
    "mvp:try_catch",
    {
      "display": "Try / Catch"
    }
  ],
  [
    "mvp:throw_error",
    {
      "display": "Throw Error"
    }
  ],
  [
    "mvp:csv_stream",
    {
      "display": "CSV Stream"
    }
  ],
  [
    "mvp:jsonl_stream",
    {
      "display": "JSONL Stream"
    }
  ],
  [
    "mvp:get_disabled_workspace_ids",
    {
      "display": "GetDisabledWorkspaceIds"
    }
  ],
  [
    "mvp:require_scope",
    {
      "display": "RequireScope"
    }
  ],
  [
    "mvp:process_output",
    {
      "display": "ProcessOutput"
    }
  ],
  [
    "mvp:update_object_security",
    {
      "display": "Update Object Security"
    }
  ],
  [
    "mvp:set_data_source",
    {
      "display": "Set Data Source"
    }
  ],
  [
    "mvp:dbo_bulkadd",
    {
      "display": "Bulk Add Record"
    }
  ],
  [
    "mvp:dbo_bulkdelete",
    {
      "display": "Bulk Delete Record"
    }
  ],
  [
    "mvp:dbo_bulkpatch",
    {
      "display": "Bulk Patch Record"
    }
  ],
  [
    "mvp:dbo_bulkupdate",
    {
      "display": "Bulk Update Record"
    }
  ],
  [
    "mvp:dbo_protect_id_duplicate",
    {
      "display": "Dbo Protect ID Duplicate"
    }
  ],
  [
    "mvp:dbo_protect_id_schema",
    {
      "display": "Dbo Protect ID Schema"
    }
  ],
  [
    "mvp:delete_table",
    {
      "display": "Delete Table"
    }
  ],
  [
    "mvp:create_dbo_content_bulk",
    {
      "display": "Create Dbo Content Bulk"
    }
  ],
  [
    "mvp:dbo_content_bulkop",
    {
      "display": "Dbo Content Bulk Op"
    }
  ],
  [
    "mvp:dbo_search_bulkop",
    {
      "display": "Dbo Search Bulk Op"
    }
  ],
  [
    "mvp:patch_dbo_content",
    {
      "display": "Patch Dbo Content"
    }
  ],
  [
    "mvp:patch_dbo_content_bulk",
    {
      "display": "Patch Dbo Content Bulk"
    }
  ],
  [
    "mvp:dbo_generate_data",
    {
      "display": "Dbo Generate Data"
    }
  ],
  [
    "mvp:middleware_can_add_check",
    {
      "display": "Middleware Can Add Check"
    }
  ],
  [
    "mvp:middleware_create_inputs",
    {
      "display": "Middleware Create Inputs"
    }
  ],
  [
    "mvp:middleware_history_stats",
    {
      "display": "MiddlewareHistoryStats"
    }
  ],
  [
    "mvp:middleware",
    {
      "display": "Middleware"
    }
  ],
  [
    "mvp:trigger_history_stats",
    {
      "display": "Trigger History Stats"
    }
  ],
  [
    "mvp:trigger_manual_action",
    {
      "display": "Trigger Manual Action"
    }
  ],
  [
    "mvp:trigger_run",
    {
      "display": "Trigger: Run"
    }
  ],
  [
    "mvp:trigger_run_event",
    {
      "display": "Trigger: Run Event"
    }
  ],
  [
    "mvp:trigger_sync",
    {
      "display": "Trigger Sync"
    }
  ],
  [
    "mvp:trigger_update_defaults",
    {
      "display": "Trigger Update Defaults"
    }
  ],
  [
    "mvp:trigger_workspace_sync",
    {
      "display": "Trigger Workspace Sync"
    }
  ],
  [
    "mvp:connect_webflow_api_request",
    {
      "display": "Webflow API"
    }
  ],
  [
    "mvp:connect_webflow_disable",
    {
      "display": "Connect Webflow Disable"
    }
  ],
  [
    "mvp:connect_webflow_enable",
    {
      "display": "Connect Webflow Enable"
    }
  ],
  [
    "mvp:ncscale_oauth_connect",
    {
      "display": "NcScale OAuth Connect"
    }
  ],
  [
    "mvp:ncscale_oauth_disconnect",
    {
      "display": "NcScale OAuth Disconnect"
    }
  ],
  [
    "mvp:ncscale_oauth_init",
    {
      "display": "NcScale OAuth Init"
    }
  ],
  [
    "mvp:connect_ncscale_send_log",
    {
      "display": "NcScale: Send Log"
    }
  ],
  [
    "mvp:ncscale_sync_settings",
    {
      "display": "NcScale: Sync Settings"
    }
  ],
  [
    "mvp:share_token_add",
    {
      "display": "Share Token: Add"
    }
  ],
  [
    "mvp:share_token_request_2fa",
    {
      "display": "Share Token: Request 2fa"
    }
  ],
  [
    "mvp:share_token_update",
    {
      "display": "Share Token: Update"
    }
  ],
  [
    "mvp:google_cloud_storage_create_var_from_file_resource",
    {
      "display": "Google Cloud Storage: Create Var From File Resource"
    }
  ],
  [
    "mvp:google_cloud_storage_delete_file",
    {
      "display": "Google Cloud Storage: Delete File"
    }
  ],
  [
    "mvp:google_cloud_storage_get_file_metadata",
    {
      "display": "Google Cloud Storage: Get File Metadata"
    }
  ],
  [
    "mvp:google_cloud_storage_list_directory",
    {
      "display": "Google Cloud Storage: List Directory"
    }
  ],
  [
    "mvp:google_cloud_storage_signed_url",
    {
      "display": "Google Cloud Storage: Signed Url"
    }
  ],
  [
    "mvp:google_cloud_storage_upload_file",
    {
      "display": "Google Cloud Storage: Upload File"
    }
  ],
  [
    "mvp:amazon_s3_create_var_from_file_resource",
    {
      "display": "Amazon S3: Create Var From File Resource"
    }
  ],
  [
    "mvp:amazon_s3_delete_file",
    {
      "display": "Amazon S3: Delete File"
    }
  ],
  [
    "mvp:amazon_s3_get_file_metadata",
    {
      "display": "Amazon S3: Get File Metadata"
    }
  ],
  [
    "mvp:amazon_s3_list_directory",
    {
      "display": "Amazon S3: List Directory"
    }
  ],
  [
    "mvp:amazon_s3_signed_url",
    {
      "display": "Amazon S3: Signed Url"
    }
  ],
  [
    "mvp:amazon_s3_upload_file",
    {
      "display": "Amazon S3: Upload File"
    }
  ],
  [
    "mvp:amazon_opensearch_request",
    {
      "display": "Amazon OpenSearch Request"
    }
  ],
  [
    "mvp:amazon_opensearch_document",
    {
      "display": "AWS OpenSearch: Document"
    }
  ],
  [
    "mvp:amazon_opensearch_query",
    {
      "display": "AWS OpenSearch: Query"
    }
  ],
  [
    "mvp:elasticsearch_query",
    {
      "display": "Elasticsearch: Query"
    }
  ],
  [
    "mvp:elasticsearch_document",
    {
      "display": "Elasticsearch: Document"
    }
  ],
  [
    "mvp:elasticsearch_request",
    {
      "display": "Elasticsearch: Request"
    }
  ],
  [
    "mvp:algolia_request",
    {
      "display": "Algolia: Request"
    }
  ],
  [
    "mvp:azure_blob_storage_create_var_from_file_resource",
    {
      "display": "Azure Blob Storage: Create Var From File Resource"
    }
  ],
  [
    "mvp:azure_blob_storage_delete_file",
    {
      "display": "Azure Blob Storage: Delete File"
    }
  ],
  [
    "mvp:azure_blob_storage_get_file_metadata",
    {
      "display": "Azure Blob Storage: Get File Metadata"
    }
  ],
  [
    "mvp:azure_blob_storage_list_directory",
    {
      "display": "Azure Blob Storage: List Directory"
    }
  ],
  [
    "mvp:azure_blob_storage_signed_url",
    {
      "display": "Azure Blob Storage: Signed Url"
    }
  ],
  [
    "mvp:azure_blob_storage_upload_file",
    {
      "display": "Azure Blob Storage: Upload File"
    }
  ],
  [
    "mvp:zip_add_file_resource",
    {
      "display": "Zip: Add File Resource"
    }
  ],
  [
    "mvp:zip_create_file_resource",
    {
      "display": "Zip: Create File Resource"
    }
  ],
  [
    "mvp:zip_delete_file_resource",
    {
      "display": "Zip: Delete File Resource"
    }
  ],
  [
    "mvp:zip_extract_file_resource",
    {
      "display": "Zip: Extract File Resource"
    }
  ],
  [
    "mvp:zip_view_contents",
    {
      "display": "Zip: View Contents"
    }
  ],
  [
    "mvp:socket_dispatch",
    {
      "display": "mvp:socket_dispatch"
    }
  ],
  [
    "mvp:debug_log",
    {
      "display": "Debug Log"
    }
  ],
  [
    "mvp:realtime_dispatch",
    {
      "display": "mvp:realtime_dispatch"
    }
  ],
  [
    "mvp:realtime_event",
    {
      "display": "Realtime Event"
    }
  ],
  [
    "mvp:realtime_settings",
    {
      "display": "Realtime Settings"
    }
  ],
  [
    "mvp:realtime_updated_instance",
    {
      "display": "Realtime Updated Instance"
    }
  ],
  [
    "mvp:realtime_update_workspace_settings",
    {
      "display": "Realtime Update Workspace Settings"
    }
  ],
  [
    "mvp:realtime_workspace_settings_reset_cache",
    {
      "display": "Realtime Workspace Settings Reset Cache"
    }
  ],
  [
    "mvp:streaming_api_request",
    {
      "display": "Streaming External API Request"
    }
  ],
  [
    "mvp:streaming_api_response",
    {
      "display": "Streaming External API Response"
    }
  ],
  [
    "mvp:test_run",
    {
      "display": "Test: Run"
    }
  ]
]);
