import fs from 'node:fs/promises';

// Adjust these paths as needed
const INPUT_PATH = './util-resources/xano_underlying_infrastructure.json';
const OUTPUT_PATH = './src/core/utils/methods/statements-map.ts';

async function main() {
   const raw = await fs.readFile(INPUT_PATH, 'utf8');
   const infrastructure = JSON.parse(raw);
   const statements = infrastructure.statement;

   // Extract only the fields we care about
   const entries = statements
      .filter((st: any) => st.name && st.display) // Only those with both fields
      .map((st: any) => [
         st.name,
         { display: st.display }, // Add group: st.group if you want
      ]);

   // Build TS code string
   const js = `// Auto-generated by minimize-xano-structure.ts
export const statementsMap: Map<string, { display: string; group?: string }> = new Map(${JSON.stringify(
      entries,
      null,
      2
   )});
`;

   await fs.writeFile(OUTPUT_PATH, js, 'utf8');
   console.log(`Generated ${OUTPUT_PATH} with ${entries.length} entries.`);
}

main().catch((err) => {
   console.error(err);
   process.exit(1);
});
