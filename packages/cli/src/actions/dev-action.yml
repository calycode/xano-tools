# This assumes the action is run from a repo that has the CLI as a dependency,
# or is the CLI repo itself (not npm-installed).

name: 'Xano Community CLI Dev Action'
description: 'Sets up and runs a Xano Community CLI command in a GitHub workflow (dev/local version).'
author: 'Xano Community'

inputs:
   run:
      description: 'One or more xcc commands to run, each on a new line. e.g., "generate-oas --all"'
      required: true
   instance-name:
      description: 'The name for the Xano instance (e.g., "prod").'
      required: true
   instance-url:
      description: 'The base URL of the Xano instance.'
      required: true
   api-token:
      description: 'The Xano Metadata API token. Should be stored as a GitHub secret.'
      required: true

outputs:
   output-dirs:
      description: 'Newline-separated list of output directories'

runs:
   using: 'composite'
   steps:
      - name: Install Dependencies
        shell: bash
        run: npm install

      - name: Configure Xano CLI Instance
        id: configure_cli
        shell: bash
        run: |
           set -e
           echo "::group::Configuring Xano CLI Instance"
           node src/index.js setup \
             --name "${{ inputs.instance-name }}" \
             --url "${{ inputs.instance-url }}" \
             --token "${{ inputs.api-token }}" \
             --no-set-current
           echo "::endgroup::"

      - name: Run Xano CLI Commands and Collect Outputs
        id: run_cli
        shell: bash
        run: |
           set -e
           OUTPUT_DIRS=""
           while IFS= read -r command_line; do
             if [ -z "$command_line" ]; then
               continue # Skip empty lines
             fi
             echo "::group::Running: xcc $command_line"
             OUTPUT=$(node src/index.js $command_line --instance="${{ inputs.instance-name }}" --print-output-dir)
             DIRS=$(echo "$OUTPUT" | grep 'OUTPUT_DIR=' | cut -d'=' -f2-)
             if [ -n "$DIRS" ]; then
               OUTPUT_DIRS="${OUTPUT_DIRS}${DIRS}"$'\n'
             fi
             echo "::endgroup::"
           done <<< "${{ inputs.run }}"
           OUTPUT_DIRS=$(echo -n "$OUTPUT_DIRS")
           echo "output-dirs<<EOF" >> $GITHUB_OUTPUT
           echo "$OUTPUT_DIRS" >> $GITHUB_OUTPUT
           echo "EOF" >> $GITHUB_OUTPUT

      # Example usage in your workflow:
      # - name: Upload all generated code as artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: generated-code
      #     path: |
      #       ${{ steps.xano.outputs.output-dirs }}
