name: Sync from Xano

on:
   workflow_dispatch:
      inputs:
         fromBranchName:
            description: 'From branch name'
            required: false
            default: 'dev'
         toBranchName:
            description: 'To branch'
            required: true
            default: 'prod'
         toBranchUrl:
            description: "GCP Signed URL for the 'to' branch"
            required: true
         actionType:
            description: "What is the action that happened, available options: 'merge', 'new'"
            required: true
            default: 'merge'
            type: choice
            options:
               - merge
               - new

permissions:
   contents: write
   pull-requests: write

jobs:
   merge:
      if: ${{ github.event.inputs.actionType == 'merge' }}
      runs-on: ubuntu-latest

      steps:
         - name: Checkout repository
           uses: actions/checkout@v4

         - name: Set up Node.js
           uses: actions/setup-node@v4.0.4
           with:
              node-version: 'latest'

         - name: Install dependencies
           run: npm install

         - name: Configure Git user
           run: |
              git config --global user.email "t.mihaly@icloud.com"
              git config --global user.name "T칩th Mih치ly"

         - name: Ensure target branch exists
           run: |
              git fetch origin
              if git ls-remote --exit-code origin ${{ github.event.inputs.toBranchName }}; then
                git checkout ${{ github.event.inputs.toBranchName }}
                git pull origin ${{ github.event.inputs.toBranchName }}
              else
                git checkout -b ${{ github.event.inputs.toBranchName }}
                git push origin ${{ github.event.inputs.toBranchName }}
              fi

         - name: Fetch workspace schema for target branch
           env:
              BRANCH_NAME: ${{ github.event.inputs.toBranchName }}
              BRANCH_URL: ${{ github.event.inputs.toBranchUrl }}
              ACTION_TYPE: ${{ github.event.inputs.actionType }}
              USE_LOCAL_YAML: 'false'
           run: node src/index.js

         - name: Clear the repo folder
           run: |
              rm -rf repo
              echo "Cleared the repo folder to ensure a clean state."

         - name: Rebuild the repo folder
           env:
              BRANCH_NAME: ${{ github.event.inputs.toBranchName }}
              BRANCH_URL: ${{ github.event.inputs.toBranchUrl }}
              ACTION_TYPE: ${{ github.event.inputs.actionType }}
              USE_LOCAL_YAML: 'false'
           run: node src/index.js

         - name: Commit and push changes to target branch
           run: |
              git add .
              git diff-index --quiet HEAD || git commit -m "Merge from ${{ github.event.inputs.fromBranchName }} to ${{ github.event.inputs.toBranchName }}"
              git push origin ${{ github.event.inputs.toBranchName }} || true

   new:
      if: ${{ github.event.inputs.actionType == 'new' }}
      runs-on: ubuntu-latest

      steps:
         - name: Checkout repository
           uses: actions/checkout@v4

         - name: Set up Node.js
           uses: actions/setup-node@v4.0.4
           with:
              node-version: 'latest'

         - name: Install dependencies
           run: npm install

         - name: Configure Git user
           run: |
              git config --global user.email "t.mihaly@icloud.com"
              git config --global user.name "T칩th Mih치ly"

         - name: Create new branch and run syncing script
           env:
              BRANCH_NAME: ${{ github.event.inputs.toBranchName || 'prod' }}
              BRANCH_URL: ${{ github.event.inputs.toBranchUrl || '' }}
              ACTION_TYPE: ${{ github.event.inputs.actionType || 'new' }}
              USE_LOCAL_YAML: 'false'
           run: |
              git fetch origin
              if git ls-remote --exit-code origin ${{ github.event.inputs.toBranchName }}; then
                git checkout ${{ github.event.inputs.toBranchName }}
                git pull origin ${{ github.event.inputs.toBranchName }}
              else
                git checkout -b ${{ github.event.inputs.toBranchName }}
              fi
              node src/index.js
              git add .
              git diff-index --quiet HEAD || git commit -m "Initial commit for ${{ github.event.inputs.toBranchName }}"
              git push origin ${{ github.event.inputs.toBranchName }} || true
